<% layout("layouts/boilerplate") %>
<!--path argument in functionObject-->
<!--passes in this templates code in body variable to boilerplate template-->
<!--this template then contains the new combined code-->

<!--Bootstrap layout -> grid - row -col - total space col = 12units -->
<div class="row">
  <div class="col-6 offset-3">
    <!--create Bootstrap -> card component-->
    <!--Bootstrap Utilities -> spacing -> class -> marginbBottom -->
    <div class="card mb-3">
      <img
        src="<%= campground.image %>"
        class="card-img-top"
        alt="Image missing"
      />
      <!--src is sending (http strucutred) GET request to imageAPI /collections:id-->
      <!--(http strucutred) response is json but in this case the urlString to random image-->
      <div class="card-body">
        <h5 class="card-title"><%= campground.title %></h5>
        <p class="card-text"><%= campground.description %></p>
      </div>
      <ul class="list-group list-group-flush">
        <li class="list-group-item text-muted"><%= campground.location %></li>
        <li class="list-group-item">$<%= campground.price %>/night</li>
      </ul>
      <div class="card-body">
        <!--Bootstrap Component -> button-->
        <a
          href="/campgrounds/<%= campground._id %>/edit"
          class="card-link btn btn-info"
          >Edit</a
        >
        <!--(http structured) GET request-->

        <!--(http structured) POST request form-->
        <!--browser forms can only make POST and GET method (http structured) requests-->
        <!--using method-override npm package - middlewareFunction("key") -->
        <!--when (http structured) POST request arrives it changes the req.method from POST to DELETE-->
        <!--adding ?queryString to /resource/:id/?key=value-->
        <!--we set value for key(_method) with alternative to POST ie.DELETE-->
        <!--Bootstrap Utilities -> display -> class -> d-inline, set form element as inline and not default block-->
        <form
          class="d-inline"
          action="/campgrounds/<%= campground._id %>?_method=DELETE"
          method="POST"
        >
          <!--Bootstrap Component -> button-->
          <button class="btn btn-danger">Delete</button>
        </form>
      </div>
      <div class="card-footer text-muted">2 days ago</div>
    </div>

    <h2>Leave a Review</h2>
    <!--(http structured) POST request form-->
    <!--form data not sent via ?queryString(can exist) but sent via request body-->
    <!--form data middlewareMethod of expressAppObject - converts request body into req.body-->
    <!--ie jsObject-{groupKey:{key/name:inputValue,key/name:inputValue}}-->
    <!--form needs novalidate boolean attribute which negates all input's required boolean attribute 
     form also needs custom class needs-validation - This combination allows boostrap validation to take over instead-->
    <form
      class="needs-validation"
      action="/campgrounds/<%=campground._id%>/reviews"
      method="POST"
      novalidate
    >
      <!--Bootstrap Utilities -> spacing -> class -> marginbBottom -->
      <div class="mb-3">
        <!-- match for to id -->
        <!--group rating as property/key in review object, review is property/key in req.body jsObject-->
        <!--Bootstrap Forms -> Form controls,Range -->
        <label class="form-label" for="rating">Rating:</label>
        <input
          class="form-range"
          type="range"
          min="1"
          max="5"
          name="review[rating]"
          id="rating"
        />
      </div>

      <!--Bootstrap Utilities -> spacing -> class -> marginbBottom -->
      <div class="mb-3">
        <!-- match for to id -->
        <!--group body as property/key in review object, review is property/key in req.body jsObject-->
        <!--Bootstrap Forms -> form controls-->
        <label class="form-label" for="body">Review:</label>
        <textarea
          class="form-control"
          name="review[body]"
          id="body"
          cols="30"
          rows="3"
          required
        ></textarea>
        <!--Bootstrap Forms -> validation -> class -->
        <div class="valid-feedback">Looks good!</div>
      </div>
      <div class="mb-3">
        <!--Bootstrap Component -> button-->
        <button class="btn btn-success">Submit</button>
      </div>
    </form>
  </div>
  <!--COLUMN CLOSED-->
</div>
<!--ROW CLOSED-->
<footer>
  <a href="/campgrounds">Back to Index</a>
  <!--(http structured) GET request-->
</footer>

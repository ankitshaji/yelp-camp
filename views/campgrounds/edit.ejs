<% layout("layouts/boilerplate") %>
<!--path argument in functionObject-->
<!--passes in this templates code in body variable to boilerplate template-->
<!--this template then contains the new combined code-->

<!--Bootstrap layout -> grid - row -col - total space col = 12units -->
<div class="row">
  <h1 class="text-center">Edit Campground</h1>
  <!--only take up 6 units out of 12 but offset by 3 to center-->
  <div class="col-6 offset-3">
    <!--(http structured) POST request form-->
    <!--change enctype atrribute for form from default application/x-www-form-urlencoded to multipart/form-data to allow input element of type=file -->
    <!--form data not sent via ?queryString(can exist) but sent via request body-->
    <!--third party middlewareMethod multer - converts mulipart form form data in request body into req.body but seperates the files data in request body into req.file/req.files-->
    <!--ie jsObject-{groupKey:{key/name:inputValue,key/name:inputValue}}-->
    <!--browser forms can only make POST and GET method (http structured) requests-->
    <!--using method-override npm package - middlewareFunction("key") -->
    <!--when (http structured) POST request arrives it changes the req.method from POST to PUT-->
    <!--adding ?queryString to /resource/:id/?key=value-->
    <!--we set value for key(_method) with alternative to POST ie.PUT-->
    <!--form needs novalidate boolean attribute which negates all input's required boolean attribute 
     form also needs custom class needs-validation - This combination allows boostrap validation to take over instead-->
    <form
      action="/campgrounds/<%= campground._id %>?_method=PUT"
      method="POST"
      novalidate
      class="needs-validation"
      enctype="multipart/form-data"
    >
      <!--Bootstrap Utilities -> spacing -> class -> marginbBottom -->
      <div class="mb-3">
        <!-- match for to id -->
        <!--group title as property/key in campground object,campground is property/key in req.body jsObject-->
        <!--Bootstrap Forms -> Form controls-->
        <label class="form-label" for="title">Title</label>
        <input
          class="form-control"
          type="text"
          id="title"
          name="campground[title]"
          placeholder="Title"
          value="<%= campground.title %>"
          required
        />
        <!--Bootstrap Forms -> validation -> class -->
        <div class="valid-feedback">Looks good!</div>
      </div>
      <!--Bootstrap Utilities -> spacing -> class -> marginbBottom -->
      <div class="mb-3">
        <!-- match for to id -->
        <!--group location as property/key in campground object, campground is property/key in req.body jsObject-->
        <!--Bootstrap Forms -> Form controls-->
        <label class="form-label" for="location">Location</label>
        <input
          class="form-control"
          type="text"
          id="location"
          name="campground[location]"
          placeholder="city, state"
          value="<%= campground.location %>"
          required
        />
        <!--Bootstrap Forms -> validation -> class -->
        <div class="valid-feedback">Looks good!</div>
      </div>
      <!--Bootstrap Utilities -> spacing -> class -> marginbBottom -->
      <div class="mb-3">
        <!-- match for to id -->
        <!--group price as property/key in campground object, campground is property/key in req.body jsObject-->
        <!--Bootstrap Forms -> Form controls-->
        <label class="form-label" for="price">Price</label>
        <!--Bootstrap Forms -> input group-->
        <div class="input-group">
          <span class="input-group-text" id="price-span">$</span>
          <input
            name="campground[price]"
            id="price"
            type="text"
            class="form-control"
            placeholder="0.00"
            aria-label="price"
            aria-describedby="price-span"
            value="<%= campground.price %>"
            required
          />
          <!--Bootstrap Forms -> validation -> class -->
          <div class="valid-feedback">Looks good!</div>
        </div>
      </div>
      <!--Bootstrap Utilities -> spacing -> class -> marginbBottom -->
      <div class="mb-3">
        <!-- match for to id -->
        <!--group description as property/key in campground object, campground is property/key in req.body jsObject-->
        <!--Bootstrap Forms -> Form controls-->
        <label class="form-label" for="description">Description</label>
        <textarea
          class="form-control"
          type="text"
          id="description"
          name="campground[description]"
          placeholder="Description"
          required
        >
        <%= campground.description %></textarea
        >
        <!--no value attribute on text-area -->
        <!--Bootstrap Forms -> validation -> class -->
        <div class="valid-feedback">Looks good!</div>
      </div>
      <!--Bootstrap Utilities -> spacing -> class -> marginbBottom -->
      <div class="mb-3">
        <label for="formFileMultiple" class="form-label"
          >Add more Image(s)</label
        >
        <!-- Boostrap Forms -> Form control -> File input -->
        <!--multipart form allows input element type=file + we can add the multiple attribute to add multiple files instead of default single-->
        <!--multer middleware needs value of name attribute-->
        <input
          class="form-control"
          type="file"
          id="formFileMultiple"
          name="image"
          multiple
        />
        <!--Bootstrap Forms -> validation -> class -->
        <div class="valid-feedback">Looks good!</div>
      </div>

      <!--Bootstrap Utilities -> spacing -> class -> marginbBottom -->
      <div class="mb-3">
        <!--arrayObject.arrayMethod //returns undefined //callback gets passed each element and its index as arguments-->
        <%campground.images.forEach((img,i)=>{%>
        <!--Bootstrap Content -> Images -> class-->
        <!--modelInstanceObject.virtualProperty - returns updated originalUrlStringObject - ie GET request url with path parameter/path variable added on -->
        <!--sends updated (http strucutred) GET request to cloudinaryWebApi GET endpoint - /YelpCamp/h_100,w_200/unqiueimagename.fileextension-->
        <img
          src="<%=img.thumbnail%>"
          class="img-thumbnail"
          alt="Image Missing"
        />
        <!--Bootstrap Forms -> Checks and radios -> class-->
        <div class="form-check form-check-inline">
          <!-- match for to id -> note we are in loop therefore use index to create unique id's -->
          <!-- deleteImages is an arrayObject property/key in req.body jsObject -->
          <!-- value of each input gets added into deleteImages arrayObject -->
          <!-- sending the images filename as value to help deleting it in cloudinarywebApi's database-->
          <input
            class="form-check-input"
            type="checkbox"
            id="img-<%=i%>"
            value="<%=img.filename%>"
            name="deleteImages[]"
          />
          <label class="form-check-label" for="img-<%=i%>">Delete ?</label>
        </div>
        <%})%>
      </div>

      <!--Bootstrap Utilities -> spacing -> class -> marginbBottom -->
      <div class="mb-3">
        <!--Bootstrap Component -> button-->
        <button class="btn btn-info">Update Campground</button>
      </div>
    </form>
    <a href="/campgrounds/<%= campground._id %>">Cancel</a>
    <!--(http structured) GET request-->
  </div>
  <!--COLUMN CLOSED-->
</div>
<!--ROW CLOSED-->
